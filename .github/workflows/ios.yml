name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Set Xcode version to 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Print current Xcode version and path
        run: |
          echo "🧪 Xcode version:"
          xcodebuild -version
          echo "📍 Xcode path:"
          xcode-select -p

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          set -e
          if ! xcodebuild -list -json > scheme-list.json 2>/dev/null; then
            echo "❌ Failed to list schemes. Check Xcode compatibility."
            exit 1
          fi
          default=$(ruby -rjson -e "puts JSON.parse(File.read('scheme-list.json'))['project']['targets'][0]")
          echo "Using default scheme: $default"
          echo "$default" > default

      - name: Build
        run: |
          set -e
          scheme=$(cat default)
          platform="iOS Simulator"
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone [^()]+' | head -1 | xargs)

          if ls *.xcworkspace 1>/dev/null 2>&1; then
            filetype_parameter="-workspace"
            file_to_build=$(ls *.xcworkspace | head -1)
          else
            filetype_parameter="-project"
            file_to_build=$(ls *.xcodeproj | head -1)
          fi

          echo "📦 Building $scheme from $file_to_build on $device"
          xcodebuild build-for-testing $filetype_parameter "$file_to_build" -scheme "$scheme" -destination "platform=$platform,name=$device"

      - name: Test
        run: |
          set -e
          scheme=$(cat default)
          platform="iOS Simulator"
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone [^()]+' | head -1 | xargs)

          if ls *.xcworkspace 1>/dev/null 2>&1; then
            filetype_parameter="-workspace"
            file_to_build=$(ls *.xcworkspace | head -1)
          else
            filetype_parameter="-project"
            file_to_build=$(ls *.xcodeproj | head -1)
          fi

          echo "🧪 Testing $scheme from $file_to_build on $device"
          xcodebuild test-without-building $filetype_parameter "$file_to_build" -scheme "$scheme" -destination "platform=$platform,name=$device"
